# Problem Name: Mindistinct
# Generated by ChatGPT 3.5

# Description:

# You are given an array of integers, and your task is to find the
# minimum number of distinct elements that need to be removed from
# the array to make all elements in the array distinct.
# In other words, you want to minimize the number of removals while
# ensuring that all remaining elements are unique.

# Write a function or program that takes an array of integers as input
# and returns the minimum number of elements that must be
# removed to achieve this goal.

# Input: [3, 3, 1, 2, 2, 1]
# Output: 3
# Explanation: You can remove one occurrence of 3,
# one occurrence of 1, and one occurrence of 2 to make all elements distinct.


# Input: [1, 2, 3, 4, 5]
# Output: 0
# Explanation: All elements are already distinct, so no removals are required.


# Solution 1
from profiler import profile_functions


def solution1(N: list[int]) -> int:
    numbers = {}
    for number in N:
        if number in numbers:
            numbers[number] += 1
        else:
            numbers[number] = 1
    return sum(value - 1 for value in numbers.values() if value != 1)


# Solution 2
def solution(N: list[int]) -> int:
    numbers = []
    minimum_distinct = 0
    for number in N:
        if number in numbers:
            minimum_distinct += 1
            numbers.remove(number)
        numbers.append(number)
    return minimum_distinct


tests = [
    [3, 3, 1, 2, 2, 1],
    [1, 2, 3, 4, 5],
    [1, 1, 1, 1, 1, 1],
    [1, 2, 3, 1, 2, 3],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
]
results = [3, 0, 5, 3, 0]

# for i, test in enumerate(tests):
#     res = solution(test)
#     print("[Pass]" if res == results[i] else "[Fail]", res)

profile_functions({"solution1": solution1, "solution2": solution}, tests)
